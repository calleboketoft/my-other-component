/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import {
  LimeWebComponentPlatform,
} from 'lime-web-component-platform';

declare global {

  namespace StencilComponents {
    interface ChildComponent {
      'name': string;
    }
  }

  interface HTMLChildComponentElement extends StencilComponents.ChildComponent, HTMLStencilElement {}

  var HTMLChildComponentElement: {
    prototype: HTMLChildComponentElement;
    new (): HTMLChildComponentElement;
  };
  interface HTMLElementTagNameMap {
    'child-component': HTMLChildComponentElement;
  }
  interface ElementTagNameMap {
    'child-component': HTMLChildComponentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'child-component': JSXElements.ChildComponentAttributes;
    }
  }
  namespace JSXElements {
    export interface ChildComponentAttributes extends HTMLAttributes {
      'name'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyPluginNrOne {
      'limeWebComponentPlatform': LimeWebComponentPlatform;
    }
  }

  interface HTMLMyPluginNrOneElement extends StencilComponents.MyPluginNrOne, HTMLStencilElement {}

  var HTMLMyPluginNrOneElement: {
    prototype: HTMLMyPluginNrOneElement;
    new (): HTMLMyPluginNrOneElement;
  };
  interface HTMLElementTagNameMap {
    'my-plugin-nr-one': HTMLMyPluginNrOneElement;
  }
  interface ElementTagNameMap {
    'my-plugin-nr-one': HTMLMyPluginNrOneElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-plugin-nr-one': JSXElements.MyPluginNrOneAttributes;
    }
  }
  namespace JSXElements {
    export interface MyPluginNrOneAttributes extends HTMLAttributes {
      'limeWebComponentPlatform'?: LimeWebComponentPlatform;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;